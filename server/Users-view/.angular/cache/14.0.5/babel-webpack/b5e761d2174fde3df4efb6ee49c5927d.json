{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/note.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let HabFormComponent = /*#__PURE__*/(() => {\n  class HabFormComponent {\n    constructor(habService, router, activatedRoute) {\n      this.habService = habService;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.classes = 'row';\n      this.hab = {\n        id: 0,\n        estado: '',\n        image: 'https://cf.bstatic.com/xdata/images/hotel/max1024x768/294111593.jpg?k=1a11c931cc7796ce52d60fceb36c1c427bfe9129069d485855cd3c012b20da28&o=&hp=1',\n        created_at: new Date()\n      };\n      this.edit = false;\n    }\n\n    ngOnInit() {\n      const params = this.activatedRoute.snapshot.params;\n\n      if (params['id']) {\n        this.habService.getHab(params['id']).subscribe(res => {\n          console.log(res);\n          this.hab = res;\n          this.edit = true;\n        }, err => console.error(err));\n      }\n    }\n\n    saveNewHab() {\n      delete this.hab.created_at;\n      this.habService.saveHab(this.hab).subscribe(res => {\n        console.log(res);\n        this.router.navigate(['/habitaciones']);\n      }, err => console.log(err));\n    }\n\n    updateHab() {\n      delete this.hab.created_at;\n      this.habService.updateHab(this.hab.id, this.hab).subscribe(res => {\n        console.log(res);\n        this.router.navigate(['/habitaciones']);\n      }, err => console.log(err));\n    }\n\n  }\n\n  HabFormComponent.ɵfac = function HabFormComponent_Factory(t) {\n    return new (t || HabFormComponent)(i0.ɵɵdirectiveInject(i1.NoteService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  HabFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HabFormComponent,\n    selectors: [[\"app-hab-form\"]],\n    hostVars: 2,\n    hostBindings: function HabFormComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.classes);\n      }\n    },\n    decls: 16,\n    vars: 2,\n    consts: [[1, \"col-nd-4\", \"offset-md-2\", 2, \"margin\", \"-60% 0 0 50%\"], [1, \"card\"], [1, \"card-body\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"title\", \"placeholder\", \"Title\", \"autofocus\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"estado\", \"id\", \"estado\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"En servicio\", \"selected\", \"\"], [\"value\", \"En limpieza\"], [\"value\", \"Fuera de servicio\"], [1, \"btn\", \"btn-success\", \"btn-block\", 3, \"click\"]],\n    template: function HabFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\")(4, \"div\", 3)(5, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function HabFormComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.hab.id = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function HabFormComponent_Template_select_ngModelChange_7_listener($event) {\n          return ctx.hab.estado = $event;\n        });\n        i0.ɵɵelementStart(8, \"option\", 6);\n        i0.ɵɵtext(9, \"En servicio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"option\", 7);\n        i0.ɵɵtext(11, \"En limpieza\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"option\", 8);\n        i0.ɵɵtext(13, \"Fuera de servicio\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function HabFormComponent_Template_button_click_14_listener() {\n          return ctx.edit ? ctx.updateHab() : ctx.saveNewHab();\n        });\n        i0.ɵɵtext(15, \" SAVE \");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.hab.id);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.hab.estado);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"input[_ngcontent-%COMP%]{width:60%}button[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return HabFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}